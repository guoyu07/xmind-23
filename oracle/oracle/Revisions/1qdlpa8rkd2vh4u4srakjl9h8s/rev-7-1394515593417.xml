<?xml version="1.0" encoding="UTF-8" standalone="no"?><xmap-revision-content xmlns="urn:xmind:xmap:xmlns:revision:1.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink"><sheet id="1qdlpa8rkd2vh4u4srakjl9h8s" timestamp="1394515592729" xmlns="urn:xmind:xmap:xmlns:content:2.0"><topic id="28e5vfh6jb9b6gmi30f3pq9u9f" structure-class="org.xmind.ui.map.clockwise" timestamp="1394513981690"><title>oracle</title><notes><html><xhtml:p><xhtml:img xhtml:src="xap:attachments/4bf55iqh56mb65h2m1kaqc5473.png"/></xhtml:p></html><plain/></notes><children><topics type="attached"><topic id="75mamfgug9c2cunhj6kck6e90d" timestamp="1394513982773"><title>1、oracle简介</title><children><topics type="attached"><topic id="5sl03oumu77d39sg9qdnrna86o" timestamp="1394513981690"><title>1、启动</title><notes><html><xhtml:p>sqlplus / as sysdba</xhtml:p><xhtml:p>&gt;startup</xhtml:p><xhtml:p>&gt;shutdown immediate</xhtml:p><xhtml:p>&gt;select staus from v$instance;</xhtml:p><xhtml:p>&gt;quit</xhtml:p><xhtml:p/><xhtml:p/></html><plain>sqlplus / as sysdba
&gt;startup
&gt;shutdown immediate
&gt;select staus from v$instance;
&gt;quit

</plain></notes></topic><topic id="7i3daqe7kfmjcbtqaqeav7u31c" timestamp="1394515064190"><title>2、oracle整体架构图</title><notes><html><xhtml:p/><xhtml:p><xhtml:img xhtml:src="xap:attachments/69bh41a7hq4ndo328mbgfu2k55.png"/></xhtml:p></html><plain>
</plain></notes><children><topics type="attached"><topic id="725qvmv71a5d4kq1ppohtu517q" timestamp="1394514974794"><title>1、SGA</title><notes><html><xhtml:p>oracle实例</xhtml:p><xhtml:p>i、Oracle实例是内存结构和后台进程的集合</xhtml:p><xhtml:p>ii、启动Oracle实例的过程，即：分配内存、启动后台进程</xhtml:p><xhtml:p>iii、Oracle实例的内存包括SGA和PGA；</xhtml:p><xhtml:p>     当启动实例的时候分配SGA；</xhtml:p><xhtml:p>     当服务器进程建立时分配PGA；</xhtml:p><xhtml:p>     <xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">一般情况下，SGA:PGA=8:1分配内存。</xhtml:span></xhtml:p><xhtml:p>iiii、Oracle实例的后台进程包括SMON、PMON、DBWR、LGWR、ARC、CKPT等。</xhtml:p><xhtml:p/><xhtml:p>    </xhtml:p><xhtml:p/><xhtml:p>5、SGA(System Global Area): 系统全局区</xhtml:p><xhtml:p>i0、数据库信息存储于SGA，由多个数据库进程共享。</xhtml:p><xhtml:p>i1、SGA包括：共享池、数据缓冲区、重做日志缓冲区、Large池、Java池、Stream池。</xhtml:p><xhtml:p/><xhtml:p>i2、共享池 </xhtml:p><xhtml:p>1)、<xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">共享池是对SQL、PL/SQL程序进行语法分析、编译、执行的内存区域。</xhtml:span></xhtml:p><xhtml:p>如在执行SELECT * FROM emp语句时，会对sql语句进行语法分析-&gt;编译-&gt;生成执行计划-&gt;运行执行计划等，这些操作都在共享池中完成；如果再次执行SELECT * FROM emp语句时，会在共享池中查找是否有相同的sql，如果存在则省去编译、生成执行计划操作步骤而是直接运行执行计划，因此养成良好的编码习惯对于提高oracle执行效率非常有帮助。</xhtml:p><xhtml:p>2)、<xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">共享池由库缓存和数据字典缓存组成。</xhtml:span></xhtml:p><xhtml:p>3)、共享池的大小直接影响数据库的性能。</xhtml:p><xhtml:p/><xhtml:p> </xhtml:p><xhtml:p>i3、数据缓冲区</xhtml:p><xhtml:p>1)、用于存储从磁盘数据文件中读入的数据，所有用户共享。</xhtml:p><xhtml:p>2)、服务器进程将读入的数据保存在数据缓冲区中，当后续的请求需要这些数据时可以在内存中找到，不需要再从磁盘读取，提高了读取速度。</xhtml:p><xhtml:p>3)、数据缓冲区的大小对数据库的读取速度有直接的影响。</xhtml:p><xhtml:p>4)、硬盘上的数据文件中的数据，如何返回给用户的？</xhtml:p><xhtml:p>i、从硬盘取出来，直接返回给用户，使得获取数据的效率非常低。（server process直接去读）</xhtml:p><xhtml:p>ii、从硬盘取出来，放到数据缓冲区，从数据缓冲区中把数据返回给用户。下次读取同样的数据的话，直接从数据缓冲区中获取，不需要再从硬盘获取。</xhtml:p><xhtml:p/><xhtml:p>   </xhtml:p><xhtml:p/><xhtml:p> i4、重做日志缓冲区 </xhtml:p><xhtml:p>1)、日志记录数据库的所有修改信息，日志信息首先产生于日志缓冲区。 </xhtml:p><xhtml:p>2)、当日志缓冲区的日志数据达到一定数量时，由后台进程将日志数据写入日志文件中。</xhtml:p><xhtml:p>3)、相对来说，日志缓冲区对数据库的性能影响较小。</xhtml:p><xhtml:p>eg、UPDATE emp SET empno=7935 WHERE empno=7934;首先在日记缓冲区中被记录，某个时候(三种情况；一、日志缓冲区中的记录达到1M 二、每隔3秒 三、日志缓冲区已经用了三分之一，满足其中任意一项就可以)把日志缓冲区中的这些记录写到在线日志中去。</xhtml:p><xhtml:p/><xhtml:p>      </xhtml:p><xhtml:p>i5、Large池 </xhtml:p><xhtml:p>为了进行大的后台进程操作而分配的内存空间，主要指备份恢复、大型IO操作、并行查询等。</xhtml:p><xhtml:p/><xhtml:p>   </xhtml:p><xhtml:p>i6、Stream池 </xhtml:p><xhtml:p>为了stream应用而分配的内存空间，高级复制技术一部分。</xhtml:p><xhtml:p/><xhtml:p>   </xhtml:p><xhtml:p>i7、JAVA池</xhtml:p><xhtml:p>为了java应用而分配的内存空间。</xhtml:p></html><plain>oracle实例
i、Oracle实例是内存结构和后台进程的集合
ii、启动Oracle实例的过程，即：分配内存、启动后台进程
iii、Oracle实例的内存包括SGA和PGA；
     当启动实例的时候分配SGA；
     当服务器进程建立时分配PGA；
     一般情况下，SGA:PGA=8:1分配内存。
iiii、Oracle实例的后台进程包括SMON、PMON、DBWR、LGWR、ARC、CKPT等。

    

5、SGA(System Global Area): 系统全局区
i0、数据库信息存储于SGA，由多个数据库进程共享。
i1、SGA包括：共享池、数据缓冲区、重做日志缓冲区、Large池、Java池、Stream池。

i2、共享池 
1)、共享池是对SQL、PL/SQL程序进行语法分析、编译、执行的内存区域。
如在执行SELECT * FROM emp语句时，会对sql语句进行语法分析-&gt;编译-&gt;生成执行计划-&gt;运行执行计划等，这些操作都在共享池中完成；如果再次执行SELECT * FROM emp语句时，会在共享池中查找是否有相同的sql，如果存在则省去编译、生成执行计划操作步骤而是直接运行执行计划，因此养成良好的编码习惯对于提高oracle执行效率非常有帮助。
2)、共享池由库缓存和数据字典缓存组成。
3)、共享池的大小直接影响数据库的性能。

 
i3、数据缓冲区
1)、用于存储从磁盘数据文件中读入的数据，所有用户共享。
2)、服务器进程将读入的数据保存在数据缓冲区中，当后续的请求需要这些数据时可以在内存中找到，不需要再从磁盘读取，提高了读取速度。
3)、数据缓冲区的大小对数据库的读取速度有直接的影响。
4)、硬盘上的数据文件中的数据，如何返回给用户的？
i、从硬盘取出来，直接返回给用户，使得获取数据的效率非常低。（server process直接去读）
ii、从硬盘取出来，放到数据缓冲区，从数据缓冲区中把数据返回给用户。下次读取同样的数据的话，直接从数据缓冲区中获取，不需要再从硬盘获取。

   

 i4、重做日志缓冲区 
1)、日志记录数据库的所有修改信息，日志信息首先产生于日志缓冲区。 
2)、当日志缓冲区的日志数据达到一定数量时，由后台进程将日志数据写入日志文件中。
3)、相对来说，日志缓冲区对数据库的性能影响较小。
eg、UPDATE emp SET empno=7935 WHERE empno=7934;首先在日记缓冲区中被记录，某个时候(三种情况；一、日志缓冲区中的记录达到1M 二、每隔3秒 三、日志缓冲区已经用了三分之一，满足其中任意一项就可以)把日志缓冲区中的这些记录写到在线日志中去。

      
i5、Large池 
为了进行大的后台进程操作而分配的内存空间，主要指备份恢复、大型IO操作、并行查询等。

   
i6、Stream池 
为了stream应用而分配的内存空间，高级复制技术一部分。

   
i7、JAVA池
为了java应用而分配的内存空间。</plain></notes></topic><topic id="3b65o8ul0vigfe3caas9ujrmt8" timestamp="1394515592729"><title>2、PGA</title><notes><html><xhtml:p>PGA(Process Global Area): 程序全局区</xhtml:p><xhtml:p>i0、程序全局区(PGA)包含单个服务器进程所需的数据和控制信息，比如每个session传入的SQL绑定变量、以及对该session进行控制的控制信息。如果该session进行了排序或hash连接操作，也会使用PGA中的内存。</xhtml:p><xhtml:p>i1、PGA是在用户进程连接到数据库并创建一个会话时自动分配的，保存每个与Oracle数据库连接的用户进程所需的信息</xhtml:p><xhtml:p>i2、共享连接模式和专用连接模式，PGA的管理方式不同。</xhtml:p><xhtml:p>大多情况下，采用专用连接模式。其产生的用户进程和服务器进程后面讲述</xhtml:p><xhtml:p/><xhtml:p><xhtml:img xhtml:src="xap:attachments/6jrs21689cdu9ot8u2hpj4gm5d.png"/></xhtml:p></html><plain>PGA(Process Global Area): 程序全局区
i0、程序全局区(PGA)包含单个服务器进程所需的数据和控制信息，比如每个session传入的SQL绑定变量、以及对该session进行控制的控制信息。如果该session进行了排序或hash连接操作，也会使用PGA中的内存。
i1、PGA是在用户进程连接到数据库并创建一个会话时自动分配的，保存每个与Oracle数据库连接的用户进程所需的信息
i2、共享连接模式和专用连接模式，PGA的管理方式不同。
大多情况下，采用专用连接模式。其产生的用户进程和服务器进程后面讲述

</plain></notes></topic><topic id="0fgvtnr335ueakppr7r5istdv6" timestamp="1394515559101"><title>3、Oracle进程</title><notes><html><xhtml:p>oracle进程：用户进程、服务器进程(影子进程，相对用户进程而言)、后台进程</xhtml:p><xhtml:p>i、用户进程是一个需要与oracle服务器进行交互的程序。当用户运行一个应用程序准备向数据库服务器发送请求时，即创建了用户进程。用户进程位于客户端，服务器进程、后台进程位于服务器端。</xhtml:p><xhtml:p>ii、服务器进程用于处理连接到该实例的用户进程的请求。当用户连接至oracle数据库实例创建会话时，即产生服务器进程。</xhtml:p><xhtml:p>iii、后台进程是Oracle数据库为了保持最佳系统性能和协调多个用户请求而设置的。Oracle实例启动时即创建一系列后台进程。</xhtml:p><xhtml:p/><xhtml:p>用户进程和服务器进程</xhtml:p><xhtml:p>i、对专用连接来说，用户在客户端启动了一个应用程序，例如sql*plus，就是在客户端启动一个用户进程；与oracle服务器端连接成功后，会在服务器端生成一个服务器进程，该服务器进程作为用户进程的代理进程，代替客户端执行各种命令并把结果返回给客户端。9i、10g、11g都使用专用连接。</xhtml:p><xhtml:p>ii、用户进程一旦中止，服务器进程立刻中止。</xhtml:p><xhtml:p><xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">iii、SGA对所有用户共享，PGA不共享。</xhtml:span></xhtml:p><xhtml:p/><xhtml:p>11、会话</xhtml:p><xhtml:p>i0、会话是用户与 Oracle 服务器的单个连接</xhtml:p><xhtml:p>i1、当用户与服务器建立连接时创建会话</xhtml:p><xhtml:p>i2、当用户与服务器断开连接时关闭会话</xhtml:p><xhtml:p>i3、从v$session中查询会话信息，SELECT * FROM v$session;</xhtml:p><xhtml:p/><xhtml:p/><xhtml:p>12、后台进程</xhtml:p><xhtml:p><xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">i0、PMON 进程监控进程，监控用户进程是否正常。</xhtml:span></xhtml:p><xhtml:p>1)、清理出现故障的进程。 </xhtml:p><xhtml:p>2)、释放所有当前挂起的锁定。</xhtml:p><xhtml:p>3)、释放故障进程使用的资源。</xhtml:p><xhtml:p><xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">i1、SMON 系统监控进程，实时监控整个oracle状况。</xhtml:span></xhtml:p><xhtml:p>1)、在实例失败之后，重新打开数据库时自动恢复实例。 </xhtml:p><xhtml:p>2)、整理数据文件的自由空间，将相邻区域结合起来。</xhtml:p><xhtml:p>3)、释放不再使用的临时段。</xhtml:p><xhtml:p><xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">i2、DBWR 数据写入进程</xhtml:span></xhtml:p><xhtml:p>1)、管理数据缓冲区，将最近使用过的块保留在内存中。</xhtml:p><xhtml:p>2)、将修改后的缓冲区数据写入数据文件中。 </xhtml:p><xhtml:p><xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">i3、LGWR 日志写入进程</xhtml:span></xhtml:p><xhtml:p>1)、负责将日志缓冲区中的日志数据写入日志文件。 </xhtml:p><xhtml:p>2)、系统有多个日志文件，该进程以循环的方式将数据写入文件。</xhtml:p><xhtml:p><xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">i4、CKPT检查点进程</xhtml:span></xhtml:p><xhtml:p>1)、为了防止实例崩溃，为了尽快进行实例恢复的进程。</xhtml:p><xhtml:p>2)、检查点包括两种：完全检查点、增量检查点。</xhtml:p><xhtml:p>3)、完全检查点只有下面两种情况下被触发：</xhtml:p><xhtml:p>	1，用户发出alter system checkpoint；</xhtml:p><xhtml:p>	2，除了shutdown abort以外的其他方式正常关闭数据库。</xhtml:p><xhtml:p>3)、增量检查点触发情况：</xhtml:p><xhtml:p>	1，每隔三秒。</xhtml:p><xhtml:p>	2，在线日志切换。</xhtml:p><xhtml:p>DBWR、LGWR、CKPT之间如何协调工作的？</xhtml:p><xhtml:p><xhtml:span style-id="7jqa3ts5ptiaub1i1vgbro4plq">i5、查看进程信息</xhtml:span></xhtml:p><xhtml:p>1)、从v$process中查询启动的后台进程信息</xhtml:p><xhtml:p>2)、查看启动了几个DBWR进程</xhtml:p><xhtml:p>		select * from v$process where program like '%DBW%';</xhtml:p><xhtml:p>		查看DBWR进程个数: show parameter db_wr，DBWR进程个数跟脏数据的产生有一定的影响。</xhtml:p><xhtml:p>		修改DBWR进程个数: </xhtml:p><xhtml:p>			alter system set db_writer_processes=3 scope=memory; --会报"无法修改指定的初始化参数"错误</xhtml:p><xhtml:p>			alter system set db_writer_processes=3 scope=spfile;--修改成功，下次启动时才生效</xhtml:p><xhtml:p>3)、查看启动了几个ARC进程</xhtml:p><xhtml:p>		select * from v$process where program like '%ARC%';</xhtml:p></html><plain>oracle进程：用户进程、服务器进程(影子进程，相对用户进程而言)、后台进程
i、用户进程是一个需要与oracle服务器进行交互的程序。当用户运行一个应用程序准备向数据库服务器发送请求时，即创建了用户进程。用户进程位于客户端，服务器进程、后台进程位于服务器端。
ii、服务器进程用于处理连接到该实例的用户进程的请求。当用户连接至oracle数据库实例创建会话时，即产生服务器进程。
iii、后台进程是Oracle数据库为了保持最佳系统性能和协调多个用户请求而设置的。Oracle实例启动时即创建一系列后台进程。

用户进程和服务器进程
i、对专用连接来说，用户在客户端启动了一个应用程序，例如sql*plus，就是在客户端启动一个用户进程；与oracle服务器端连接成功后，会在服务器端生成一个服务器进程，该服务器进程作为用户进程的代理进程，代替客户端执行各种命令并把结果返回给客户端。9i、10g、11g都使用专用连接。
ii、用户进程一旦中止，服务器进程立刻中止。
iii、SGA对所有用户共享，PGA不共享。

11、会话
i0、会话是用户与 Oracle 服务器的单个连接
i1、当用户与服务器建立连接时创建会话
i2、当用户与服务器断开连接时关闭会话
i3、从v$session中查询会话信息，SELECT * FROM v$session;


12、后台进程
i0、PMON 进程监控进程，监控用户进程是否正常。
1)、清理出现故障的进程。 
2)、释放所有当前挂起的锁定。
3)、释放故障进程使用的资源。
i1、SMON 系统监控进程，实时监控整个oracle状况。
1)、在实例失败之后，重新打开数据库时自动恢复实例。 
2)、整理数据文件的自由空间，将相邻区域结合起来。
3)、释放不再使用的临时段。
i2、DBWR 数据写入进程
1)、管理数据缓冲区，将最近使用过的块保留在内存中。
2)、将修改后的缓冲区数据写入数据文件中。 
i3、LGWR 日志写入进程
1)、负责将日志缓冲区中的日志数据写入日志文件。 
2)、系统有多个日志文件，该进程以循环的方式将数据写入文件。
i4、CKPT检查点进程
1)、为了防止实例崩溃，为了尽快进行实例恢复的进程。
2)、检查点包括两种：完全检查点、增量检查点。
3)、完全检查点只有下面两种情况下被触发：
	1，用户发出alter system checkpoint；
	2，除了shutdown abort以外的其他方式正常关闭数据库。
3)、增量检查点触发情况：
	1，每隔三秒。
	2，在线日志切换。
DBWR、LGWR、CKPT之间如何协调工作的？
i5、查看进程信息
1)、从v$process中查询启动的后台进程信息
2)、查看启动了几个DBWR进程
		select * from v$process where program like '%DBW%';
		查看DBWR进程个数: show parameter db_wr，DBWR进程个数跟脏数据的产生有一定的影响。
		修改DBWR进程个数: 
			alter system set db_writer_processes=3 scope=memory; --会报"无法修改指定的初始化参数"错误
			alter system set db_writer_processes=3 scope=spfile;--修改成功，下次启动时才生效
3)、查看启动了几个ARC进程
		select * from v$process where program like '%ARC%';</plain></notes></topic></topics></children></topic></topics></children></topic></topics></children></topic><title>画布 1</title></sheet></xmap-revision-content>